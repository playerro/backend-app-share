# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    avatarsDirectory: '%kernel.project_dir%/public/uploads/avatar'
    postOffset: 10

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $postOffset: '%postOffset%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Doctrine\ORM\EntityManagerInterface: '@doctrine.orm.entity_manager'
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    App\Services\UserService:
        autowire: true
    App\Services\PostService:
        autowire: true
    App\Services\AppService:
        autowire: true
    App\Services\FileUploader:
        autowire: true
        arguments:
            $targetDirectory: '%avatarsDirectory%'
    app.listener.authentication_success_response:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    acme_api.event.authentication_failure_listener:
        class: App\EventListener\AuthenticationFailureListener
        tags:
             - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
